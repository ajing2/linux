*** nginx的URL的重写规则
**** rewrite规则

     nginx通过ngx_http_rewrite_module模块支持url重写和if条件判断,但要使用rewrite功能,还需要pcre的支持,应该在编译nginx的时候指定pcre的源码目录,rewrite的使用语法如下:

     rewrite命令默认的最后一项参数为flag标记,其支持flag标记主要有一下几种:

     #+BEGIN_EXAMPLE
     last：相当于apache的[L]标记,表示完成rewrite之后搜索相应的url或者location;
     break：表示总之匹配,不在匹配后面的规则;
     redirect：返回302临时重定向;
     permanent：返回301永久重定向;
     #+END_EXAMPLE
     rewrite的使用字段 =location= =server= =if=
    
     #+BEGIN_EXAMPLE
     if (!-e $request_filename) {
         rewrite ^/(index|atom|rsd)\.xml$ http://feed.shunz.net last;
         rewrite ^([_0-9a-zA-Z-]+)?(/wp-.*) $2 last;
         rewrite ^([_0-9a-zA-Z-]+)?(/.*\.php)$ $2 last;rewrite ^ /index.php last;
     }

     if ($document_uri !~ 'abc'){
         rewrite ^/(.*)$ http://www.abc.com/abc/$1 permanent;
     }
     #+END_EXAMPLE

     而不是单独加一句 =rewrite ^/(.*)$ http://www.abc.com/abc/$1 permanent;=

     如果只加rewrite规则,而不限定条件,那么会造成死循环, 会访问到 =http://www.abc.com/abc/abc/abc/abc/....=
**** if命令

     #+BEGIN_EXAMPLE
     ~  为区分大小写匹配 
     ~* 为不区分大小写匹配 
     !~和!~*分别为区分大小写不匹配及不区分大小写不匹配
     -f和!-f用来判断是否存在文件 
     -d和!-d用来判断是否存在目录 
     -e和!-e用来判断是否存在文件或目录 
     -x和!-x用来判断文件是否可执行
     #+END_EXAMPLE
     nginx的很多内容变量,可以和if命令一起使用
     #+BEGIN_EXAMPLE
     $args        1.0.8        请求中的参数;
     $body_bytes_sent        1.0.8        已发送的消息体字节数
     $content_length        1.0.8        HTTP请求信息里的"Content-Length";
     $content_type        1.0.8        请求信息里的"Content-Type";
     $document_root        1.0.8        针对当前请求的根路径设置值;
     $document_uri        1.0.8        与$uri相同; 比如 /test1/test2/test.php
     $host        1.0.8        请求信息中的"Host",如果请求中没有Host行,则等于设置的服务器名;  
     $http_cookie        1.0.8        cookie 信息
     $http_referer        1.0.8        引用地址
     $http_user_agent        1.0.8        客户端代理信息
     $http_x_forwarded_for        1.0.8          
     $remote_addr        1.0.8        客户端地址;
     $remote_port        1.0.8        客户端端口号;
     $remote_user        1.0.8        客户端用户名,认证用;
     $request        1.0.8        用户请求 
     $request_body_file        1.0.8        发往后端的本地文件名称  
     $request_filename        1.0.8        当前请求的文件路径名,比如$request_filename：D:\nginx/html/test1/test2/test.php
     $request_method        1.0.8        请求的方法,比如"GET"、"POST"等;
     $request_uri        1.0.8        请求的URI,带参数; 比如http://localhost:88/test1/test2/test.php
     $scheme        1.0.8        所用的协议,比如http或者是https,比如rewrite^(.+)$$scheme://example.com$1redirect;     
     $server_addr        1.0.8        服务器地址,如果没有用listen指明服务器地址,使用这个变量将发起一次系统调用以取得地址(造成资源浪费);
     $server_name        1.0.8        请求到达的服务器名;
     $server_port        1.0.8        请求到达的服务器端口号;
     $server_protocol        1.0.8        请求的协议版本,"HTTP/1.0"或"HTTP/1.1";
     $uri        1.0.8        请求的URI,可能和最初的值有不同,比如经过重定向之类的;
     #+END_EXAMPLE
